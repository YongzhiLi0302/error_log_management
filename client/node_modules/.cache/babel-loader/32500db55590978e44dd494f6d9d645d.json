{"ast":null,"code":"// ag-grid-enterprise v21.2.1\n\"use strict\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ag_grid_community_1 = require(\"ag-grid-community\");\n\nvar md5_1 = require(\"./license/md5\");\n\nvar LicenseManager =\n/** @class */\nfunction () {\n  function LicenseManager() {\n    this.watermarkMessage = undefined;\n  }\n\n  LicenseManager_1 = LicenseManager;\n\n  LicenseManager.prototype.validateLicense = function () {\n    if (ag_grid_community_1._.missingOrEmpty(LicenseManager_1.licenseKey)) {\n      this.outputMissingLicenseKey();\n    } else if (!ag_grid_community_1._.missingOrEmpty(LicenseManager_1.licenseKey) && LicenseManager_1.licenseKey.length > 32) {\n      var _a = LicenseManager_1.extractLicenseComponents(LicenseManager_1.licenseKey),\n          md5 = _a.md5,\n          license = _a.license,\n          version = _a.version,\n          isTrial = _a.isTrial;\n\n      if (md5 === this.md5.md5(license)) {\n        if (ag_grid_community_1._.exists(version) && version) {\n          this.validateLicenseKeyForVersion(version, !!isTrial, license);\n        } else {\n          this.validateLegacyKey(license);\n        }\n      } else {\n        this.outputInvalidLicenseKey();\n      }\n    }\n  };\n\n  LicenseManager.extractExpiry = function (license) {\n    var restrictionHashed = license.substring(license.lastIndexOf('_') + 1, license.length);\n    return new Date(parseInt(LicenseManager_1.decode(restrictionHashed), 10));\n  };\n\n  LicenseManager.extractLicenseComponents = function (licenseKey) {\n    var hashStart = licenseKey.length - 32;\n    var md5 = licenseKey.substring(hashStart);\n    var license = licenseKey.substring(0, hashStart);\n\n    var _a = LicenseManager_1.extractBracketedInformation(licenseKey),\n        version = _a[0],\n        isTrial = _a[1];\n\n    return {\n      md5: md5,\n      license: license,\n      version: version,\n      isTrial: isTrial\n    };\n  };\n\n  LicenseManager.prototype.getLicenseDetails = function (licenseKey) {\n    var _a = LicenseManager_1.extractLicenseComponents(licenseKey),\n        md5 = _a.md5,\n        license = _a.license,\n        version = _a.version,\n        isTrial = _a.isTrial;\n\n    var valid = md5 === this.md5.md5(license);\n    var expiry = null;\n\n    if (valid) {\n      expiry = LicenseManager_1.extractExpiry(license);\n      valid = !isNaN(expiry.getTime());\n    }\n\n    return {\n      licenseKey: licenseKey,\n      valid: valid,\n      expiry: valid ? LicenseManager_1.formatDate(expiry) : null,\n      version: version ? version : 'legacy',\n      isTrial: isTrial\n    };\n  };\n\n  LicenseManager.prototype.isDisplayWatermark = function () {\n    return !ag_grid_community_1._.missingOrEmpty(this.watermarkMessage);\n  };\n\n  LicenseManager.prototype.getWatermarkMessage = function () {\n    return this.watermarkMessage;\n  };\n\n  LicenseManager.formatDate = function (date) {\n    var monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    var day = date.getDate();\n    var monthIndex = date.getMonth();\n    var year = date.getFullYear();\n    return day + ' ' + monthNames[monthIndex] + ' ' + year;\n  };\n\n  LicenseManager.getGridReleaseDate = function () {\n    return new Date(parseInt(LicenseManager_1.decode(LicenseManager_1.RELEASE_INFORMATION), 10));\n  };\n\n  LicenseManager.decode = function (input) {\n    var keystr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n    var t = '';\n    var n, r, i;\n    var s, o, u, a;\n    var f = 0;\n    var e = input.replace(/[^A-Za-z0-9+/=]/g, '');\n\n    while (f < e.length) {\n      s = keystr.indexOf(e.charAt(f++));\n      o = keystr.indexOf(e.charAt(f++));\n      u = keystr.indexOf(e.charAt(f++));\n      a = keystr.indexOf(e.charAt(f++));\n      n = s << 2 | o >> 4;\n      r = (o & 15) << 4 | u >> 2;\n      i = (u & 3) << 6 | a;\n      t = t + String.fromCharCode(n);\n\n      if (u != 64) {\n        t = t + String.fromCharCode(r);\n      }\n\n      if (a != 64) {\n        t = t + String.fromCharCode(i);\n      }\n    }\n\n    t = LicenseManager_1.utf8_decode(t);\n    return t;\n  };\n\n  LicenseManager.utf8_decode = function (input) {\n    input = input.replace(/rn/g, 'n');\n    var t = '';\n\n    for (var n = 0; n < input.length; n++) {\n      var r = input.charCodeAt(n);\n\n      if (r < 128) {\n        t += String.fromCharCode(r);\n      } else if (r > 127 && r < 2048) {\n        t += String.fromCharCode(r >> 6 | 192);\n        t += String.fromCharCode(r & 63 | 128);\n      } else {\n        t += String.fromCharCode(r >> 12 | 224);\n        t += String.fromCharCode(r >> 6 & 63 | 128);\n        t += String.fromCharCode(r & 63 | 128);\n      }\n    }\n\n    return t;\n  };\n\n  LicenseManager.setLicenseKey = function (licenseKey) {\n    LicenseManager_1.licenseKey = licenseKey;\n  };\n\n  LicenseManager.extractBracketedInformation = function (licenseKey) {\n    var matches = licenseKey.split('[').filter(function (v) {\n      return v.indexOf(']') > -1;\n    }).map(function (value) {\n      return value.split(']')[0];\n    });\n\n    if (!matches || matches.length === 0) {\n      return [null, null];\n    }\n\n    var isTrial = matches.filter(function (match) {\n      return match === 'TRIAL';\n    }).length === 1;\n    var version = matches.filter(function (match) {\n      return match.indexOf(\"v\") === 0;\n    }).map(function (match) {\n      return match.replace(/^v/, \"\");\n    })[0];\n    return [version, isTrial];\n  };\n\n  LicenseManager.prototype.validateLicenseKeyForVersion = function (version, isTrial, license) {\n    switch (version) {\n      case \"2\":\n        if (isTrial) {\n          this.validateForTrial(license);\n        } else {\n          this.validateLegacyKey(license);\n        }\n\n        break;\n    }\n  };\n\n  LicenseManager.prototype.validateLegacyKey = function (license) {\n    var gridReleaseDate = LicenseManager_1.getGridReleaseDate();\n    var expiry = LicenseManager_1.extractExpiry(license);\n    var valid = false;\n    var current = false;\n\n    if (!isNaN(expiry.getTime())) {\n      valid = true;\n      current = gridReleaseDate < expiry;\n    }\n\n    if (!valid) {\n      this.outputInvalidLicenseKey();\n    } else if (!current) {\n      var formattedExpiryDate = LicenseManager_1.formatDate(expiry);\n      var formattedReleaseDate = LicenseManager_1.formatDate(gridReleaseDate);\n      this.outputIncompatibleVersion(formattedExpiryDate, formattedReleaseDate);\n    }\n  };\n\n  LicenseManager.prototype.validateForTrial = function (license) {\n    var expiry = LicenseManager_1.extractExpiry(license);\n    var now = new Date();\n    var valid = false;\n    var current = false;\n\n    if (!isNaN(expiry.getTime())) {\n      valid = true;\n      current = expiry > now;\n    }\n\n    if (!valid) {\n      this.outputInvalidLicenseKey();\n    } else if (!current) {\n      var formattedExpiryDate = LicenseManager_1.formatDate(expiry);\n      this.outputExpiredTrialKey(formattedExpiryDate);\n    }\n  };\n\n  LicenseManager.prototype.outputInvalidLicenseKey = function () {\n    console.error('*****************************************************************************************************************');\n    console.error('***************************************** ag-Grid Enterprise License ********************************************');\n    console.error('********************************************* Invalid License ***************************************************');\n    console.error('* Your license for ag-Grid Enterprise is not valid - please contact info@ag-grid.com to obtain a valid license. *');\n    console.error('*****************************************************************************************************************');\n    console.error('*****************************************************************************************************************');\n    this.watermarkMessage = \"Invalid License\";\n  };\n\n  LicenseManager.prototype.outputExpiredTrialKey = function (formattedExpiryDate) {\n    console.error('****************************************************************************************************************');\n    console.error('***************************************** ag-Grid Enterprise License *******************************************');\n    console.error('*****************************************   Trial Period Expired.    *******************************************');\n    console.error(\"* Your license for ag-Grid Enterprise expired on \" + formattedExpiryDate + \".                                                *\");\n    console.error('* Please email info@ag-grid.com to purchase a license.                                                         *');\n    console.error('****************************************************************************************************************');\n    console.error('****************************************************************************************************************');\n    this.watermarkMessage = \"Trial Period Expired\";\n  };\n\n  LicenseManager.prototype.outputMissingLicenseKey = function () {\n    console.error('****************************************************************************************************************');\n    console.error('***************************************** ag-Grid Enterprise License *******************************************');\n    console.error('****************************************** License Key Not Found ***********************************************');\n    console.error('* All ag-Grid Enterprise features are unlocked.                                                                *');\n    console.error('* This is an evaluation only version, it is not licensed for development projects intended for production.     *');\n    console.error('* If you want to hide the watermark, please email info@ag-grid.com for a trial license.                        *');\n    console.error('****************************************************************************************************************');\n    console.error('****************************************************************************************************************');\n    this.watermarkMessage = \"For Trial Use Only\";\n  };\n\n  LicenseManager.prototype.outputIncompatibleVersion = function (formattedExpiryDate, formattedReleaseDate) {\n    console.error('****************************************************************************************************************************');\n    console.error('********************************************* ag-Grid Enterprise License ***************************************************');\n    console.error('*************************** License not compatible with installed version of ag-Grid Enterprise. ***************************');\n    console.error(\"* Your license for ag-Grid Enterprise expired on \" + formattedExpiryDate + \" but the version installed was released on \" + formattedReleaseDate + \". *\");\n    console.error('* Please contact info@ag-grid.com to renew your subscription to new versions.                                              *');\n    console.error('****************************************************************************************************************************');\n    console.error('****************************************************************************************************************************');\n    this.watermarkMessage = \"Incompatible License Version\";\n  };\n\n  var LicenseManager_1;\n  LicenseManager.RELEASE_INFORMATION = 'MTU2NzY4OTc5NDA1NQ==';\n\n  __decorate([ag_grid_community_1.Autowired('md5'), __metadata(\"design:type\", md5_1.MD5)], LicenseManager.prototype, \"md5\", void 0);\n\n  __decorate([ag_grid_community_1.PreConstruct, __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], LicenseManager.prototype, \"validateLicense\", null);\n\n  LicenseManager = LicenseManager_1 = __decorate([ag_grid_community_1.Bean('licenseManager')], LicenseManager);\n  return LicenseManager;\n}();\n\nexports.LicenseManager = LicenseManager;","map":null,"metadata":{},"sourceType":"script"}