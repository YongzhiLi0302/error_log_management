{"ast":null,"code":"var _jsxFileName = \"/Users/LiYongzhi/Desktop/error_log_management/client/src/components/ProcessTable.js\";\nimport React, { Component } from 'react';\nimport { AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-material.css';\nimport Service from 'Service';\n\nclass ProcessTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      columnDefs: [{\n        headerName: \"Process\",\n        field: \"processId\"\n      }, {\n        headerName: \"Status\",\n        field: \"status\"\n      }, {\n        headerName: \"Number of Items\",\n        field: \"numberOfItems\"\n      }, {\n        headerName: \"Information1\",\n        field: \"information1\"\n      }, {\n        headerName: \"Information2\",\n        field: \"information2\"\n      }],\n      rowData: [],\n      rowClassRules: {\n        \"process-failure\": function (params) {\n          var status = params.data.status;\n          return status === \"KO\";\n        }\n      }\n    };\n    this.refreshFlows = this.refreshFlows.bind(this);\n  }\n\n  componentDidMount() {\n    this.refreshFlows();\n  }\n\n  componentDidUpdate() {\n    this.refreshFlows();\n  }\n\n  refreshFlows() {\n    Service.retrieveAllProcesses().then(response => {\n      this.setState({\n        rowData: response.data\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      style: {\n        display: \"contents\",\n        justifyContent: \"center\",\n        marginTop: \"60px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      style: {\n        backgroundColor: \"#F7F7F7\",\n        marginTop: \"30px\",\n        justifyContent: \"center\",\n        border: \"1px solid #F7F7F7\",\n        height: \"35px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      style: {\n        padding: \"30px\",\n        justifyContent: \"center\",\n        border: \"1px solid #F7F7F7\",\n        height: \"90px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      style: {\n        paddingLeft: \"10px\",\n        borderLeft: \"5px solid #555555\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Processes' States\")), React.createElement(\"div\", {\n      style: {\n        height: '500px',\n        justifyContent: \"center\",\n        margin: \"auto\",\n        border: \"1px solid #f7f7f7\"\n      },\n      className: \"ag-theme-material container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(AgGridReact, {\n      enableColResize: true,\n      enableFilter: true,\n      pagination: true,\n      paginationAutoPageSize: true,\n      columnDefs: this.state.columnDefs,\n      rowData: this.state.rowData,\n      rowClassRules: this.state.rowClassRules,\n      alignedGrids: 'center',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default ProcessTable;","map":{"version":3,"sources":["/Users/LiYongzhi/Desktop/error_log_management/client/src/components/ProcessTable.js"],"names":["React","Component","AgGridReact","Service","ProcessTable","constructor","props","state","columnDefs","headerName","field","rowData","rowClassRules","params","status","data","refreshFlows","bind","componentDidMount","componentDidUpdate","retrieveAllProcesses","then","response","setState","render","display","justifyContent","marginTop","backgroundColor","border","height","padding","paddingLeft","borderLeft","margin"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-material.css';\nimport Service from 'Service';\n\n\nclass ProcessTable extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          columnDefs: [{\n            headerName: \"Process\", field: \"processId\"\n          }, {\n            headerName: \"Status\", field: \"status\"\n          }, {\n            headerName: \"Number of Items\", field: \"numberOfItems\"\n          },{\n            headerName: \"Information1\", field: \"information1\"\n          },{\n            headerName: \"Information2\", field: \"information2\"\n          }],\n          rowData: [],\n          rowClassRules: {\n              \"process-failure\": function(params) {\n                  var status = params.data.status;\n                  return status === \"KO\";\n                }\n          }\n        };\n        this.refreshFlows = this.refreshFlows.bind(this);\n      }\n    \n    componentDidMount() {\n        this.refreshFlows();\n    }\n\n    componentDidUpdate() {\n      this.refreshFlows();\n    }\n\n    refreshFlows() {\n      Service.retrieveAllProcesses()\n          .then(response => {\n              this.setState({rowData: response.data});\n          })\n    }\n      render() {\n        return (\n                <div className=\"container\" style={{\n                    display: \"contents\",\n                    justifyContent: \"center\",\n                    marginTop: \"60px\"\n                  }}>\n                      <div className=\"container\" style={{\n                    backgroundColor: \"#F7F7F7\",\n                    marginTop: \"30px\",\n                    justifyContent: \"center\",\n                    border: \"1px solid #F7F7F7\",\n                    height: \"35px\"\n                }}/>\n                <div className=\"container\" style={{\n                    padding: \"30px\",\n                    justifyContent: \"center\",\n                    border: \"1px solid #F7F7F7\",\n                    height: \"90px\"\n                    }}>\n                    <h5 style={{\n                        paddingLeft:\"10px\",\n                        borderLeft: \"5px solid #555555\"\n                    }}>Processes' States</h5>\n                </div>\n\n                <div style={{\n                    height: '500px', \n                    justifyContent: \"center\",\n                    margin: \"auto\",\n                    border: \"1px solid #f7f7f7\"\n                }}\n                    className=\"ag-theme-material container\"\n                >\n              \n                    <AgGridReact \n                        enableColResize={true}\n                        enableFilter={true}\n                        pagination={true} \n                        paginationAutoPageSize={true}\n                        columnDefs={this.state.columnDefs}\n                        rowData={this.state.rowData}\n                        rowClassRules= {this.state.rowClassRules}\n                        alignedGrids={'center'}\n                        \n                    >\n                    </AgGridReact>\n                </div>\n            </div>\n        \n        );\n      }\n}\n\nexport default ProcessTable;"]},"metadata":{},"sourceType":"module"}