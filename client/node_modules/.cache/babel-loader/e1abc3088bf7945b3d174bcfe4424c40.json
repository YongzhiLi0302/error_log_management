{"ast":null,"code":"var _jsxFileName = \"/Users/LiYongzhi/Desktop/error_log_management/src/components/ErrorLog.js\";\nimport React, { Component } from 'react';\nimport { MDBBtn, MDBDataTable, MDBCollapse } from 'mdbreact';\n\nclass ErrorLog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleCollapse = collapseID => () => {\n      this.setState(prevState => ({\n        collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\n      }));\n    };\n\n    this.state = {\n      totalCount: 0,\n      collapseID: \"\"\n    };\n    this.data = {\n      columns: [{\n        label: \"Error ID\",\n        field: \"error\"\n      }, {\n        label: \"Description\",\n        field: \"description\",\n        width: 400\n      }, {\n        label: \"Flow\",\n        field: \"flow\",\n        width: 80\n      }, {\n        label: \"Error Type\",\n        field: \"type\",\n        width: 80\n      }, {\n        label: \"Emergency Level\",\n        field: \"emergency\",\n        width: 80\n      }],\n      rows: [{\n        error: \"00001\",\n        description: \"blablablablablablablablablablablablablablablablabla...\",\n        flow: 12,\n        type: \"A\",\n        emergency: \"general\"\n      }, {\n        error: \"00002\",\n        description: React.createElement(React.Fragment, null, React.createElement(MDBBtn, {\n          color: \"primary\",\n          onClick: this.toggleCollapse(\"basicCollapse\"),\n          style: {\n            marginBottom: \"1rem\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, \"COLLAPSE BUTTON\"), React.createElement(MDBCollapse, {\n          className: \"Collapse\",\n          id: \"basicCollapse\",\n          isOpen: this.state.collapseID,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          style: {\n            if(isOpen) {\n              this.display = \"contents\";\n            }\n\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum\"))),\n        flow: 12,\n        type: \"D\",\n        emergency: \"urgent\"\n      }, {\n        error: \"00003\",\n        description: \"A very long description very long descriptionvery long descriptionvery long descriptionvery long descriptionvery long descriptionvery long descriptionvery long descriptionvery long descriptionvery long descriptionvery long descriptionvery long descriptionvery long descriptionvery long descriptionvery long description\",\n        flow: 12,\n        type: \"B\",\n        emergency: \"priority\"\n      }, {\n        error: \"00004\",\n        description: \"blablablablablablablablablablablablablablablablabla...\",\n        flow: 12,\n        type: \"C\",\n        emergency: \"urgent\"\n      }]\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      style: {\n        backgroundColor: \"#3F51B5\",\n        marginTop: \"30px\",\n        justifyContent: \"center\",\n        border: \"1px solid #F7F7F7\",\n        height: \"35px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      style: {\n        padding: \"30px\",\n        justifyContent: \"center\",\n        border: \"1px solid #F7F7F7\",\n        height: \"110px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      style: {\n        paddingLeft: \"10px\",\n        borderLeft: \"5px solid #555555\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Unread Errors\"), React.createElement(\"p\", {\n      style: {\n        paddingLeft: \"16px\",\n        fontSize: \"14px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Total Count: \", this.state.totalCount)), React.createElement(\"div\", {\n      className: \"container\",\n      style: {\n        justifyContent: \"center\",\n        padding: \"30px\",\n        borderLeft: \"1px solid #f7f7f7\",\n        borderRight: \"1px solid #f7f7f7\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(MDBDataTable, {\n      hover: true,\n      pagination: true,\n      data: this.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default ErrorLog;","map":{"version":3,"sources":["/Users/LiYongzhi/Desktop/error_log_management/src/components/ErrorLog.js"],"names":["React","Component","MDBBtn","MDBDataTable","MDBCollapse","ErrorLog","constructor","props","toggleCollapse","collapseID","setState","prevState","state","totalCount","data","columns","label","field","width","rows","error","description","flow","type","emergency","marginBottom","if","isOpen","display","render","backgroundColor","marginTop","justifyContent","border","height","padding","paddingLeft","borderLeft","fontSize","borderRight"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,YAAjB,EAA+BC,WAA/B,QAAmD,UAAnD;;AAIA,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAC7BK,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAChB,UAAMA,KAAN;;AADgB,SAqFpBC,cArFoB,GAqFHC,UAAU,IAAI,MAAM;AACjC,WAAKC,QAAL,CAAcC,SAAS,KAAK;AAC1BF,QAAAA,UAAU,EAAEE,SAAS,CAACF,UAAV,KAAyBA,UAAzB,GAAsCA,UAAtC,GAAmD;AADrC,OAAL,CAAvB;AAGH,KAzFmB;;AAEhB,SAAKG,KAAL,GAAW;AACPC,MAAAA,UAAU,EAAE,CADL;AAEPJ,MAAAA,UAAU,EAAE;AAFL,KAAX;AAKA,SAAKK,IAAL,GAAU;AACVC,MAAAA,OAAO,EAAE,CACL;AACIC,QAAAA,KAAK,EAAE,UADX;AAEIC,QAAAA,KAAK,EAAE;AAFX,OADK,EAKL;AACID,QAAAA,KAAK,EAAE,aADX;AAEIC,QAAAA,KAAK,EAAE,aAFX;AAGIC,QAAAA,KAAK,EAAE;AAHX,OALK,EAUL;AACIF,QAAAA,KAAK,EAAE,MADX;AAEIC,QAAAA,KAAK,EAAE,MAFX;AAGIC,QAAAA,KAAK,EAAE;AAHX,OAVK,EAeL;AACIF,QAAAA,KAAK,EAAE,YADX;AAEIC,QAAAA,KAAK,EAAE,MAFX;AAGIC,QAAAA,KAAK,EAAE;AAHX,OAfK,EAoBL;AACIF,QAAAA,KAAK,EAAE,iBADX;AAEIC,QAAAA,KAAK,EAAE,WAFX;AAGIC,QAAAA,KAAK,EAAE;AAHX,OApBK,CADC;AA2BVC,MAAAA,IAAI,EAAE,CACF;AACIC,QAAAA,KAAK,EAAE,OADX;AAEIC,QAAAA,WAAW,EAAE,wDAFjB;AAGIC,QAAAA,IAAI,EAAE,EAHV;AAIIC,QAAAA,IAAI,EAAE,GAJV;AAKIC,QAAAA,SAAS,EAAE;AALf,OADE,EAQF;AACIJ,QAAAA,KAAK,EAAE,OADX;AAEIC,QAAAA,WAAW,EAAE,0CACL,oBAAC,MAAD;AACI,UAAA,KAAK,EAAC,SADV;AAEI,UAAA,OAAO,EAAE,KAAKb,cAAL,CAAoB,eAApB,CAFb;AAGI,UAAA,KAAK,EAAE;AAAEiB,YAAAA,YAAY,EAAE;AAAhB,WAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADK,EAQL,oBAAC,WAAD;AAAa,UAAA,SAAS,EAAC,UAAvB;AAAkC,UAAA,EAAE,EAAC,eAArC;AAAqD,UAAA,MAAM,EAAE,KAAKb,KAAL,CAAWH,UAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAG,UAAA,KAAK,EAAE;AAACiB,YAAAA,EAAE,CAACC,MAAD,EAAQ;AAAC,mBAAKC,OAAL,GAAc,UAAd;AAAyB;;AAArC,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0cADJ,CARK,CAFjB;AAsBIN,QAAAA,IAAI,EAAE,EAtBV;AAuBIC,QAAAA,IAAI,EAAE,GAvBV;AAwBIC,QAAAA,SAAS,EAAE;AAxBf,OARE,EAkCF;AACIJ,QAAAA,KAAK,EAAE,OADX;AAEIC,QAAAA,WAAW,EAAE,gUAFjB;AAGIC,QAAAA,IAAI,EAAE,EAHV;AAIIC,QAAAA,IAAI,EAAE,GAJV;AAKIC,QAAAA,SAAS,EAAE;AALf,OAlCE,EAyCF;AACIJ,QAAAA,KAAK,EAAE,OADX;AAEIC,QAAAA,WAAW,EAAE,wDAFjB;AAGIC,QAAAA,IAAI,EAAE,EAHV;AAIIC,QAAAA,IAAI,EAAE,GAJV;AAKIC,QAAAA,SAAS,EAAE;AALf,OAzCE;AA3BI,KAAV;AA6EH;;AAQDK,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,KAAK,EAAE;AAC9BC,QAAAA,eAAe,EAAE,SADa;AAE9BC,QAAAA,SAAS,EAAE,MAFmB;AAG9BC,QAAAA,cAAc,EAAE,QAHc;AAI9BC,QAAAA,MAAM,EAAE,mBAJsB;AAK9BC,QAAAA,MAAM,EAAE;AALsB,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAQI;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,KAAK,EAAE;AAC9BC,QAAAA,OAAO,EAAE,MADqB;AAE9BH,QAAAA,cAAc,EAAE,QAFc;AAG9BC,QAAAA,MAAM,EAAE,mBAHsB;AAI9BC,QAAAA,MAAM,EAAE;AAJsB,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMI;AAAI,MAAA,KAAK,EAAE;AACPE,QAAAA,WAAW,EAAC,MADL;AAEPC,QAAAA,UAAU,EAAE;AAFL,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBANJ,EAUI;AAAG,MAAA,KAAK,EAAE;AACND,QAAAA,WAAW,EAAC,MADN;AACcE,QAAAA,QAAQ,EAAE;AADxB,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACyD,KAAK1B,KAAL,CAAWC,UADpE,CAVJ,CARJ,EAuBI;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,KAAK,EAAE;AAC9BmB,QAAAA,cAAc,EAAE,QADc;AAE9BG,QAAAA,OAAO,EAAE,MAFqB;AAG9BE,QAAAA,UAAU,EAAE,mBAHkB;AAI9BE,QAAAA,WAAW,EAAE;AAJiB,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMA,oBAAC,YAAD;AACA,MAAA,KAAK,MADL;AAEA,MAAA,UAAU,EAAI,IAFd;AAGA,MAAA,IAAI,EAAE,KAAKzB,IAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANA,CAvBJ,CADJ;AA4DH;;AA1J4B;;AA4JjC,eAAeT,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport { MDBBtn, MDBDataTable, MDBCollapse  } from 'mdbreact';\n\n\n\nclass ErrorLog extends Component {\n    constructor (props) {\n        super(props);\n        this.state={\n            totalCount: 0,\n            collapseID: \"\",\n        };\n    \n        this.data={\n        columns: [\n            {\n                label: \"Error ID\",\n                field: \"error\",\n            },\n            {\n                label: \"Description\",\n                field: \"description\",\n                width: 400,\n            },\n            {\n                label: \"Flow\",\n                field: \"flow\",\n                width: 80\n            },\n            {\n                label: \"Error Type\",\n                field: \"type\",\n                width: 80\n            },\n            {\n                label: \"Emergency Level\",\n                field: \"emergency\",\n                width: 80,\n            }\n        ],\n        rows: [\n            {\n                error: \"00001\",\n                description: \"blablablablablablablablablablablablablablablablabla...\",\n                flow: 12,\n                type: \"A\",\n                emergency: \"general\"\n            },\n            {\n                error: \"00002\",\n                description: <>\n                        <MDBBtn\n                            color=\"primary\"\n                            onClick={this.toggleCollapse(\"basicCollapse\")}\n                            style={{ marginBottom: \"1rem\" }}\n                        >\n                            COLLAPSE BUTTON\n                            </MDBBtn>\n                        <MDBCollapse className=\"Collapse\" id=\"basicCollapse\" isOpen={this.state.collapseID} >\n                            <p style={{if(isOpen){this.display= \"contents\"}}}>\n                            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n                            eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim\n                            ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n                            aliquip ex ea commodo consequat. Duis aute irure dolor in\n                            reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n                            pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\n                            culpa qui officia deserunt mollit anim id est laborum\n                            </p>\n                        </MDBCollapse>\n                            </>,\n                flow: 12,\n                type: \"D\",\n                emergency: \"urgent\",\n            },\n            {\n                error: \"00003\",\n                description: \"A very long description very long descriptionvery long descriptionvery long descriptionvery long descriptionvery long descriptionvery long descriptionvery long descriptionvery long descriptionvery long descriptionvery long descriptionvery long descriptionvery long descriptionvery long descriptionvery long description\",\n                flow: 12,\n                type: \"B\",\n                emergency: \"priority\"\n            },\n            {\n                error: \"00004\",\n                description: \"blablablablablablablablablablablablablablablablabla...\",\n                flow: 12,\n                type: \"C\",\n                emergency: \"urgent\"\n            }\n        ]\n    }\n    }\n    toggleCollapse = collapseID => () => {\n        this.setState(prevState => ({\n          collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\n        }));\n    }\n\n\n    render() {\n        return (\n            <div>\n                <div className=\"container\" style={{\n                    backgroundColor: \"#3F51B5\",\n                    marginTop: \"30px\",\n                    justifyContent: \"center\",\n                    border: \"1px solid #F7F7F7\",\n                    height: \"35px\"\n                }}/>\n                <div className=\"container\" style={{\n                    padding: \"30px\",\n                    justifyContent: \"center\",\n                    border: \"1px solid #F7F7F7\",\n                    height: \"110px\"\n                }}>\n                    <h5 style={{\n                        paddingLeft:\"10px\",\n                        borderLeft: \"5px solid #555555\"\n                    }}>Unread Errors</h5>\n                    <p style={{\n                        paddingLeft:\"16px\", fontSize: \"14px\"}}>Total Count: {this.state.totalCount}</p>\n                </div>\n\n{/* // Here starts the table */}\n                <div className=\"container\" style={{\n                    justifyContent: \"center\",\n                    padding: \"30px\",\n                    borderLeft: \"1px solid #f7f7f7\",\n                    borderRight: \"1px solid #f7f7f7\"\n                }}>\n                <MDBDataTable \n                hover\n                pagination = {true} \n                data={this.data}\n                />\n{/* <>\n                        <MDBBtn\n                            color=\"primary\"\n                            onClick={this.toggleCollapse(\"basicCollapse\")}\n                            style={{ marginBottom: \"1rem\" }}\n                        >\n                            COLLAPSE BUTTON\n                            </MDBBtn>\n                        <MDBCollapse id=\"basicCollapse\" style={{display: \"flex\"}} isOpen={this.state.collapseID}>\n                            <p>\n                            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n                            eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim\n                            ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n                            aliquip ex ea commodo consequat. Duis aute irure dolor in\n                            reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n                            pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\n                            culpa qui officia deserunt mollit anim id est laborum\n                            </p>\n                        </MDBCollapse>\n                            </> */}\n                \n                </div>\n                </div>\n                 \n        )\n    }\n}\nexport default ErrorLog;"]},"metadata":{},"sourceType":"module"}