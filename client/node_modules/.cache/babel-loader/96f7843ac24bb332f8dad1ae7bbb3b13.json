{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _querySelectorAll = _interopRequireDefault(require(\"dom-helpers/query/querySelectorAll\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _propTypesExtra = require(\"prop-types-extra\");\n\nvar _mapContextToProps = _interopRequireDefault(require(\"react-context-toolbox/mapContextToProps\"));\n\nvar _SelectableContext = _interopRequireWildcard(require(\"./SelectableContext\"));\n\nvar _NavContext = _interopRequireDefault(require(\"./NavContext\"));\n\nvar _TabContext = _interopRequireDefault(require(\"./TabContext\"));\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar noop = function noop() {};\n\nvar AbstractNav =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AbstractNav, _React$Component);\n\n  function AbstractNav() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AbstractNav);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AbstractNav)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSelect\", function (key, event) {\n      var _this$props = _this.props,\n          onSelect = _this$props.onSelect,\n          parentOnSelect = _this$props.parentOnSelect;\n      if (key == null) return;\n      if (onSelect) onSelect(key, event);\n      if (parentOnSelect) parentOnSelect(key, event);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleKeyDown\", function (event) {\n      var onKeyDown = _this.props.onKeyDown;\n      if (onKeyDown) onKeyDown(event);\n      var nextActiveChild;\n\n      switch (event.key) {\n        case 'ArrowLeft':\n        case 'ArrowUp':\n          nextActiveChild = _this.getNextActiveChild(-1);\n          break;\n\n        case 'ArrowRight':\n        case 'ArrowDown':\n          nextActiveChild = _this.getNextActiveChild(1);\n          break;\n\n        default:\n          return;\n      }\n\n      if (!nextActiveChild) return;\n      event.preventDefault();\n\n      _this.handleSelect(nextActiveChild.dataset.rbEventKey, event);\n\n      _this._needsRefocus = true;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"attachRef\", function (ref) {\n      _this.listNode = ref;\n    });\n\n    _this.state = {\n      navContext: null\n    };\n    return _this;\n  }\n\n  _createClass(AbstractNav, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (!this._needsRefocus || !this.listNode) return;\n      var activeChild = this.listNode.querySelector('[data-rb-event-key].active');\n      if (activeChild) activeChild.focus();\n    }\n  }, {\n    key: \"getNextActiveChild\",\n    value: function getNextActiveChild(offset) {\n      if (!this.listNode) return null;\n      var items = (0, _querySelectorAll.default)(this.listNode, '[data-rb-event-key]:not(.disabled)');\n      var activeChild = this.listNode.querySelector('.active');\n      var index = items.indexOf(activeChild);\n      if (index === -1) return null;\n      var nextIndex = index + offset;\n      if (nextIndex >= items.length) nextIndex = 0;\n      if (nextIndex < 0) nextIndex = items.length - 1;\n      return items[nextIndex];\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          Component = _this$props2.as,\n          _ = _this$props2.onSelect,\n          _0 = _this$props2.parentOnSelect,\n          _1 = _this$props2.getControlledId,\n          _2 = _this$props2.getControllerId,\n          _3 = _this$props2.activeKey,\n          props = _objectWithoutProperties(_this$props2, [\"as\", \"onSelect\", \"parentOnSelect\", \"getControlledId\", \"getControllerId\", \"activeKey\"]);\n\n      if (props.role === 'tablist') {\n        props.onKeyDown = this.handleKeyDown;\n      }\n\n      return _react.default.createElement(_SelectableContext.default.Provider, {\n        value: this.handleSelect\n      }, _react.default.createElement(_NavContext.default.Provider, {\n        value: this.state.navContext\n      }, _react.default.createElement(Component, _extends({}, props, {\n        onKeyDown: this.handleKeyDown,\n        ref: this.attachRef\n      }))));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(_ref) {\n      var activeKey = _ref.activeKey,\n          getControlledId = _ref.getControlledId,\n          getControllerId = _ref.getControllerId,\n          role = _ref.role;\n      return {\n        navContext: {\n          role: role,\n          // used by NavLink to determine it's role\n          activeKey: (0, _SelectableContext.makeEventKey)(activeKey),\n          getControlledId: getControlledId || noop,\n          getControllerId: getControllerId || noop\n        }\n      };\n    }\n  }]);\n\n  return AbstractNav;\n}(_react.default.Component);\n\n_defineProperty(AbstractNav, \"propTypes\", {\n  onSelect: _propTypes.default.func.isRequired,\n  as: _propTypesExtra.elementType,\n\n  /** @private */\n  onKeyDown: _propTypes.default.func\n});\n\n_defineProperty(AbstractNav, \"defaultProps\", {\n  as: 'ul'\n});\n\nvar _default = (0, _mapContextToProps.default)([_SelectableContext.default, _TabContext.default], function (parentOnSelect, tabContext, _ref2) {\n  var role = _ref2.role;\n  if (!tabContext) return {\n    parentOnSelect: parentOnSelect\n  };\n  var activeKey = tabContext.activeKey,\n      getControllerId = tabContext.getControllerId,\n      getControlledId = tabContext.getControlledId;\n  return {\n    activeKey: activeKey,\n    parentOnSelect: parentOnSelect,\n    role: role || 'tablist',\n    // pass these two through to avoid having to listen to\n    // both Tab and Nav contexts in NavLink\n    getControllerId: getControllerId,\n    getControlledId: getControlledId\n  };\n}, AbstractNav);\n\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}