{"ast":null,"code":"var _jsxFileName = \"/Users/LiYongzhi/Desktop/error_log_management/client/src/components/ErrorLog.js\";\nimport React, { Component } from 'react';\nimport { MDBBtn, MDBDataTable, MDBCollapse } from 'mdbreact';\nimport Service from '../Service';\nimport Button from 'react-bootstrap/Button';\n\nclass ErrorLog extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      totalCount: null,\n      collapseID: \"\",\n      columns: [{\n        label: \"Error ID\",\n        field: \"error\"\n      }, {\n        label: \"Description\",\n        field: \"description\",\n        width: 200\n      }, {\n        label: \"Flow\",\n        field: \"flow\",\n        width: 100\n      }, {\n        label: \"Error Type\",\n        field: \"type\",\n        width: 100\n      }, {\n        label: \"Emergency Level\",\n        field: \"emergency\",\n        width: 100\n      }, {\n        label: \"Actions\",\n        field: \"actions\",\n        width: 100\n      }],\n      rows: []\n    };\n    this.refreshErrors = this.refreshErrors.bind(this);\n    this.refreshTotalCount = this.refreshTotalCount.bind(this);\n    this.rowAddActions = this.rowAddActions.bind(this);\n  }\n\n  componentDidMount() {\n    this.refreshErrors();\n    this.refreshTotalCount();\n  }\n\n  componentDidUpdate() {\n    this.refreshErrors();\n    this.refreshTotalCount();\n  }\n\n  refreshErrors() {\n    // Service.retrieveAllErrors()\n    //     .then(response => {\n    //         this.setState({rows: response.data};\n    //     })\n    Service.retrieveAllErrors().then(response => {\n      this.rowAddActions(response.data);\n    });\n  }\n\n  rowAddActions(data) {\n    data = data.map(row => {\n      return [row.id, row.description, row.flow, row.errorType, row.emergency, React.createElement(Button, {\n        variant: \"primary\",\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Primary\")];\n    }); // console.log(data);\n\n    this.setState({\n      rows: data\n    });\n  }\n\n  refreshTotalCount() {\n    Service.getErrorsTotalCount().then(response => {\n      this.setState({\n        totalCount: response.data\n      });\n    });\n  } // toggleCollapse = collapseID => () => {\n  //     this.setState(prevState => ({\n  //       collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\n  //     }));\n  // }\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      style: {\n        backgroundColor: \"#3F51B5\",\n        marginTop: \"30px\",\n        justifyContent: \"center\",\n        border: \"1px solid #F7F7F7\",\n        height: \"35px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      style: {\n        padding: \"30px\",\n        justifyContent: \"center\",\n        border: \"1px solid #F7F7F7\",\n        height: \"110px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      style: {\n        paddingLeft: \"10px\",\n        borderLeft: \"5px solid #555555\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Unread Errors\"), React.createElement(\"p\", {\n      style: {\n        paddingLeft: \"16px\",\n        fontSize: \"14px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Total Count: \", this.state.totalCount)), React.createElement(\"div\", {\n      className: \"container\",\n      style: {\n        justifyContent: \"center\",\n        padding: \"30px\",\n        borderLeft: \"1px solid #f7f7f7\",\n        borderRight: \"1px solid #f7f7f7\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(MDBDataTable, {\n      hover: true,\n      pagination: \"true\",\n      columns: this.state.columns,\n      rows: this.state.rows // .map((rows) => {\n      //     return (\n      //         {rows,\n      //         \"actions\": <button className=\"btn btn-teal btn-rounded btn-sm m-0\">Button</button>}\n      //     );\n      // })}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default ErrorLog;","map":{"version":3,"sources":["/Users/LiYongzhi/Desktop/error_log_management/client/src/components/ErrorLog.js"],"names":["React","Component","MDBBtn","MDBDataTable","MDBCollapse","Service","Button","ErrorLog","constructor","props","state","totalCount","collapseID","columns","label","field","width","rows","refreshErrors","bind","refreshTotalCount","rowAddActions","componentDidMount","componentDidUpdate","retrieveAllErrors","then","response","data","map","row","id","description","flow","errorType","emergency","setState","getErrorsTotalCount","render","backgroundColor","marginTop","justifyContent","border","height","padding","paddingLeft","borderLeft","fontSize","borderRight"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { MDBBtn, MDBDataTable, MDBCollapse  } from 'mdbreact';\nimport Service from '../Service';\nimport Button from 'react-bootstrap/Button';\n\n\nclass ErrorLog extends Component {\n    constructor (props) {\n        super(props);\n        this.state={\n            totalCount: null,\n            collapseID: \"\",\n            columns: [\n                {\n                    label: \"Error ID\",\n                    field: \"error\",\n                },\n                {\n                    label: \"Description\",\n                    field: \"description\",\n                    width: 200,\n                },\n                {\n                    label: \"Flow\",\n                    field: \"flow\",\n                    width: 100\n                },\n                {\n                    label: \"Error Type\",\n                    field: \"type\",\n                    width: 100\n                },\n                {\n                    label: \"Emergency Level\",\n                    field: \"emergency\",\n                    width: 100,\n                },\n                {\n                    label: \"Actions\",\n                    field: \"actions\",\n                    width: 100,\n                }\n            ],\n            rows: [],\n        };\n        this.refreshErrors = this.refreshErrors.bind(this);\n        this.refreshTotalCount = this.refreshTotalCount.bind(this);\n        this.rowAddActions = this.rowAddActions.bind(this);\n    }\n\n    componentDidMount() {\n        this.refreshErrors();\n        this.refreshTotalCount();\n    }\n\n    componentDidUpdate() {\n        this.refreshErrors();\n        this.refreshTotalCount();\n    }\n\n    refreshErrors() {\n        // Service.retrieveAllErrors()\n        //     .then(response => {\n        //         this.setState({rows: response.data};\n        //     })\n        Service.retrieveAllErrors()\n            .then(response => {\n                this.rowAddActions(response.data);\n            })\n    }\n\n    rowAddActions(data) {\n        data = data.map((row) => {\n            return (\n                [row.id, row.description, row.flow, row.errorType, row.emergency, \n                    <Button variant=\"primary\" size=\"sm\">Primary</Button>\n                ]\n            )\n        }\n        );\n        // console.log(data);\n        this.setState({rows: data});\n    }\n\n    refreshTotalCount() {\n        Service.getErrorsTotalCount()\n            .then(response => {\n                this.setState({totalCount: response.data});\n            })\n    }\n\n    // toggleCollapse = collapseID => () => {\n    //     this.setState(prevState => ({\n    //       collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\n    //     }));\n    // }\n\n\n    render() {\n        return (\n            <div>\n                <div className=\"container\" style={{\n                    backgroundColor: \"#3F51B5\",\n                    marginTop: \"30px\",\n                    justifyContent: \"center\",\n                    border: \"1px solid #F7F7F7\",\n                    height: \"35px\"\n                }}/>\n                <div className=\"container\" style={{\n                    padding: \"30px\",\n                    justifyContent: \"center\",\n                    border: \"1px solid #F7F7F7\",\n                    height: \"110px\"\n                }}>\n                    <h5 style={{\n                        paddingLeft:\"10px\",\n                        borderLeft: \"5px solid #555555\"\n                    }}>Unread Errors</h5>\n                    <p style={{\n                        paddingLeft:\"16px\", fontSize: \"14px\"}}>Total Count: {this.state.totalCount}</p>\n                </div>\n\n{/* // Here starts the table */}\n                <div className=\"container\" style={{\n                    justifyContent: \"center\",\n                    padding: \"30px\",\n                    borderLeft: \"1px solid #f7f7f7\",\n                    borderRight: \"1px solid #f7f7f7\"\n                }}>\n                <MDBDataTable \n                hover\n                pagination = \"true\" \n                columns = {this.state.columns}\n                rows = {this.state.rows}\n                // .map((rows) => {\n                //     return (\n                //         {rows,\n                //         \"actions\": <button className=\"btn btn-teal btn-rounded btn-sm m-0\">Button</button>}\n                          \n                //     );\n                // })}\n                />\n{/* <>\n                        <MDBBtn\n                            color=\"primary\"\n                            onClick={this.toggleCollapse(\"basicCollapse\")}\n                            style={{ marginBottom: \"1rem\" }}\n                        >\n                            COLLAPSE BUTTON\n                            </MDBBtn>\n                        <MDBCollapse id=\"basicCollapse\" isOpen={this.state.collapseID}>\n                            <p>\n                            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n                            eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim\n                            ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n                            aliquip ex ea commodo consequat. Duis aute irure dolor in\n                            reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n                            pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\n                            culpa qui officia deserunt mollit anim id est laborum\n                            </p>\n                        </MDBCollapse>\n                            </>  */}\n                \n                </div>\n                </div>\n                 \n        )\n    }\n}\nexport default ErrorLog;"]},"metadata":{},"sourceType":"module"}