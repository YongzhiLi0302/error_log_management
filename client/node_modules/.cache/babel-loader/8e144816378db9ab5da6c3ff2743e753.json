{"ast":null,"code":"// ag-grid-enterprise v21.2.1\n\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar main_1 = require(\"ag-grid-community/main\");\n\nvar SELECTED_STATE;\n\n(function (SELECTED_STATE) {\n  SELECTED_STATE[SELECTED_STATE[\"CHECKED\"] = 0] = \"CHECKED\";\n  SELECTED_STATE[SELECTED_STATE[\"UNCHECKED\"] = 1] = \"UNCHECKED\";\n  SELECTED_STATE[SELECTED_STATE[\"INDETERMINATE\"] = 2] = \"INDETERMINATE\";\n})(SELECTED_STATE = exports.SELECTED_STATE || (exports.SELECTED_STATE = {}));\n\nvar PrimaryColsHeaderPanel =\n/** @class */\nfunction (_super) {\n  __extends(PrimaryColsHeaderPanel, _super);\n\n  function PrimaryColsHeaderPanel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.expandState = SELECTED_STATE.CHECKED;\n    _this.selectState = SELECTED_STATE.CHECKED;\n    return _this;\n  }\n\n  PrimaryColsHeaderPanel.prototype.preConstruct = function () {\n    var translate = this.gridOptionsWrapper.getLocaleTextFunc();\n    this.setTemplate(\"<div class=\\\"ag-primary-cols-header-panel\\\" role=\\\"presentation\\\">\\n            <div ref=\\\"eExpand\\\"></div>\\n            <div ref=\\\"eSelect\\\"></div>\\n            <div class=\\\"ag-input-wrapper ag-primary-cols-filter-wrapper\\\" ref=\\\"eFilterWrapper\\\" role=\\\"presentation\\\">\\n                <input class=\\\"ag-primary-cols-filter\\\" ref=\\\"eFilterTextField\\\" type=\\\"text\\\" placeholder=\\\"\" + translate('filterOoo', 'Filter...') + \"\\\">        \\n            </div>\\n        </div>\");\n  };\n\n  PrimaryColsHeaderPanel.prototype.postConstruct = function () {\n    this.addEventListeners();\n    this.createExpandIcons();\n    this.createCheckIcons();\n    this.setExpandState(SELECTED_STATE.CHECKED);\n    this.addDestroyableEventListener(this.eExpand, 'click', this.onExpandClicked.bind(this));\n    this.addDestroyableEventListener(this.eSelect, 'click', this.onSelectClicked.bind(this));\n    this.addDestroyableEventListener(this.eFilterTextField, 'input', this.onFilterTextChanged.bind(this));\n  };\n\n  PrimaryColsHeaderPanel.prototype.init = function (params) {\n    this.params = params;\n\n    if (this.columnController.isReady()) {\n      this.setColumnsCheckedState();\n      this.showOrHideOptions();\n    }\n  };\n\n  PrimaryColsHeaderPanel.prototype.createExpandIcons = function () {\n    this.eExpand.appendChild(this.eExpandChecked = main_1._.createIconNoSpan('columnSelectOpen', this.gridOptionsWrapper));\n    this.eExpand.appendChild(this.eExpandUnchecked = main_1._.createIconNoSpan('columnSelectClosed', this.gridOptionsWrapper));\n    this.eExpand.appendChild(this.eExpandIndeterminate = main_1._.createIconNoSpan('columnSelectIndeterminate', this.gridOptionsWrapper));\n  };\n\n  PrimaryColsHeaderPanel.prototype.createCheckIcons = function () {\n    this.eSelect.appendChild(this.eSelectChecked = main_1._.createIconNoSpan('checkboxChecked', this.gridOptionsWrapper));\n    this.eSelect.appendChild(this.eSelectUnchecked = main_1._.createIconNoSpan('checkboxUnchecked', this.gridOptionsWrapper));\n    this.eSelect.appendChild(this.eSelectIndeterminate = main_1._.createIconNoSpan('checkboxIndeterminate', this.gridOptionsWrapper));\n  }; // we only show expand / collapse if we are showing columns\n\n\n  PrimaryColsHeaderPanel.prototype.showOrHideOptions = function () {\n    var showFilter = !this.params.suppressColumnFilter;\n    var showSelect = !this.params.suppressColumnSelectAll;\n    var showExpand = !this.params.suppressColumnExpandAll;\n    var groupsPresent = this.columnController.isPrimaryColumnGroupsPresent();\n\n    main_1._.setDisplayed(this.eFilterWrapper, showFilter);\n\n    main_1._.setDisplayed(this.eSelect, showSelect);\n\n    main_1._.setDisplayed(this.eExpand, showExpand && groupsPresent);\n  };\n\n  PrimaryColsHeaderPanel.prototype.addEventListeners = function () {\n    var _this = this;\n\n    var eventsImpactingCheckedState = [main_1.Events.EVENT_COLUMN_EVERYTHING_CHANGED, main_1.Events.EVENT_COLUMN_PIVOT_CHANGED, main_1.Events.EVENT_COLUMN_PIVOT_MODE_CHANGED, main_1.Events.EVENT_COLUMN_ROW_GROUP_CHANGED, main_1.Events.EVENT_COLUMN_VALUE_CHANGED, main_1.Events.EVENT_COLUMN_VISIBLE, main_1.Events.EVENT_NEW_COLUMNS_LOADED];\n    eventsImpactingCheckedState.forEach(function (event) {\n      _this.addDestroyableEventListener(_this.eventService, event, _this.setColumnsCheckedState.bind(_this));\n    });\n    this.addDestroyableEventListener(this.eventService, main_1.Events.EVENT_NEW_COLUMNS_LOADED, this.showOrHideOptions.bind(this));\n  };\n\n  PrimaryColsHeaderPanel.prototype.onFilterTextChanged = function () {\n    var _this = this;\n\n    if (!this.onFilterTextChangedDebounced) {\n      this.onFilterTextChangedDebounced = main_1._.debounce(function () {\n        var filterText = _this.eFilterTextField.value;\n\n        _this.dispatchEvent({\n          type: 'filterChanged',\n          filterText: filterText\n        });\n      }, 400);\n    }\n\n    this.onFilterTextChangedDebounced();\n  };\n\n  PrimaryColsHeaderPanel.prototype.onSelectClicked = function () {\n    // here we just fire the event. the following happens is the flow of events:\n    // 1. event here fired.\n    // 2. toolpanel updates the columns.\n    // 3. column controller fires events of column updated\n    // 4. update in this panel is updated based on events fired by column controller\n    if (this.selectState === SELECTED_STATE.CHECKED) {\n      this.dispatchEvent({\n        type: 'unselectAll'\n      });\n    } else {\n      this.dispatchEvent({\n        type: 'selectAll'\n      });\n    }\n  };\n\n  PrimaryColsHeaderPanel.prototype.onExpandClicked = function () {\n    if (this.expandState === SELECTED_STATE.CHECKED) {\n      this.dispatchEvent({\n        type: 'collapseAll'\n      });\n    } else {\n      this.dispatchEvent({\n        type: 'expandAll'\n      });\n    }\n  };\n\n  PrimaryColsHeaderPanel.prototype.setExpandState = function (state) {\n    this.expandState = state;\n\n    main_1._.setDisplayed(this.eExpandChecked, this.expandState === SELECTED_STATE.CHECKED);\n\n    main_1._.setDisplayed(this.eExpandUnchecked, this.expandState === SELECTED_STATE.UNCHECKED);\n\n    main_1._.setDisplayed(this.eExpandIndeterminate, this.expandState === SELECTED_STATE.INDETERMINATE);\n  };\n\n  PrimaryColsHeaderPanel.prototype.setColumnsCheckedState = function () {\n    var allPrimaryColumns = this.columnController.getAllPrimaryColumns();\n    var columns = [];\n\n    if (allPrimaryColumns !== null) {\n      columns = allPrimaryColumns.filter(function (col) {\n        return !col.getColDef().lockVisible;\n      });\n    }\n\n    var pivotMode = this.columnController.isPivotMode();\n    var checkedCount = 0;\n    var uncheckedCount = 0;\n    columns.forEach(function (col) {\n      // ignore lock visible columns\n      if (col.getColDef().lockVisible) {\n        return;\n      } // not not count columns not in tool panel\n\n\n      var colDef = col.getColDef();\n\n      if (colDef && colDef.suppressToolPanel) {\n        return;\n      }\n\n      var checked;\n\n      if (pivotMode) {\n        var noPivotModeOptionsAllowed = !col.isAllowPivot() && !col.isAllowRowGroup() && !col.isAllowValue();\n\n        if (noPivotModeOptionsAllowed) {\n          return;\n        }\n\n        checked = col.isValueActive() || col.isPivotActive() || col.isRowGroupActive();\n      } else {\n        checked = col.isVisible();\n      }\n\n      if (checked) {\n        checkedCount++;\n      } else {\n        uncheckedCount++;\n      }\n    });\n\n    if (checkedCount > 0 && uncheckedCount > 0) {\n      this.selectState = SELECTED_STATE.INDETERMINATE;\n    } else if (uncheckedCount > 0) {\n      this.selectState = SELECTED_STATE.UNCHECKED;\n    } else {\n      this.selectState = SELECTED_STATE.CHECKED;\n    }\n\n    main_1._.setDisplayed(this.eSelectChecked, this.selectState === SELECTED_STATE.CHECKED);\n\n    main_1._.setDisplayed(this.eSelectUnchecked, this.selectState === SELECTED_STATE.UNCHECKED);\n\n    main_1._.setDisplayed(this.eSelectIndeterminate, this.selectState === SELECTED_STATE.INDETERMINATE);\n  };\n\n  __decorate([main_1.Autowired('gridOptionsWrapper'), __metadata(\"design:type\", main_1.GridOptionsWrapper)], PrimaryColsHeaderPanel.prototype, \"gridOptionsWrapper\", void 0);\n\n  __decorate([main_1.Autowired('columnController'), __metadata(\"design:type\", main_1.ColumnController)], PrimaryColsHeaderPanel.prototype, \"columnController\", void 0);\n\n  __decorate([main_1.Autowired('eventService'), __metadata(\"design:type\", main_1.EventService)], PrimaryColsHeaderPanel.prototype, \"eventService\", void 0);\n\n  __decorate([main_1.RefSelector('eFilterTextField'), __metadata(\"design:type\", HTMLInputElement)], PrimaryColsHeaderPanel.prototype, \"eFilterTextField\", void 0);\n\n  __decorate([main_1.RefSelector('eExpand'), __metadata(\"design:type\", HTMLElement)], PrimaryColsHeaderPanel.prototype, \"eExpand\", void 0);\n\n  __decorate([main_1.RefSelector('eSelect'), __metadata(\"design:type\", HTMLElement)], PrimaryColsHeaderPanel.prototype, \"eSelect\", void 0);\n\n  __decorate([main_1.RefSelector('eFilterWrapper'), __metadata(\"design:type\", HTMLElement)], PrimaryColsHeaderPanel.prototype, \"eFilterWrapper\", void 0);\n\n  __decorate([main_1.PreConstruct, __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], PrimaryColsHeaderPanel.prototype, \"preConstruct\", null);\n\n  __decorate([main_1.PostConstruct, __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], PrimaryColsHeaderPanel.prototype, \"postConstruct\", null);\n\n  return PrimaryColsHeaderPanel;\n}(main_1.Component);\n\nexports.PrimaryColsHeaderPanel = PrimaryColsHeaderPanel;","map":null,"metadata":{},"sourceType":"script"}